"use strict";
'use client';
Object.defineProperty(exports, "__esModule", { value: true });
exports.Tooltip = void 0;
const tslib_1 = require("tslib");
const jsx_runtime_1 = require("react/jsx-runtime");
const React = tslib_1.__importStar(require("react"));
const hooks_1 = require("../../hooks");
const private_1 = require("../../hooks/private");
const Popup_1 = require("../Popup");
const Text_1 = require("../Text");
const cn_1 = require("../utils/cn");
const getElementRef_1 = require("../utils/getElementRef");
require("./Tooltip.css");
const b = (0, cn_1.block)('tooltip');
const DEFAULT_PLACEMENT = ['bottom', 'top'];
const Tooltip = (props) => {
    const { children, content, disabled, placement = DEFAULT_PLACEMENT, qa, id, className, style, disablePortal, contentClassName, openDelay = 1000, closeDelay, } = props;
    const [anchorElement, setAnchorElement] = React.useState(null);
    const tooltipVisible = (0, private_1.useTooltipVisible)(anchorElement, {
        openDelay,
        closeDelay,
        preventTriggerOnFocus: true,
    });
    const renderPopup = () => {
        return ((0, jsx_runtime_1.jsx)(Popup_1.Popup, { id: id, role: "tooltip", className: b(null, className), style: style, open: tooltipVisible && !disabled, placement: placement, anchorRef: { current: anchorElement }, disablePortal: disablePortal, disableEscapeKeyDown: true, disableOutsideClick: true, disableLayer: true, qa: qa, children: (0, jsx_runtime_1.jsx)("div", { className: b('content', contentClassName), children: (0, jsx_runtime_1.jsx)(Text_1.Text, { variant: "body-short", color: "complementary", children: content }) }) }));
    };
    const child = React.Children.only(children);
    const childRef = (0, getElementRef_1.getElementRef)(child);
    const ref = (0, hooks_1.useForkRef)(setAnchorElement, childRef);
    return ((0, jsx_runtime_1.jsxs)(React.Fragment, { children: [React.cloneElement(child, { ref }), anchorElement ? renderPopup() : null] }));
};
exports.Tooltip = Tooltip;
