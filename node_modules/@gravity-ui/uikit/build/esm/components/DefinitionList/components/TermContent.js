import { __rest } from "tslib";
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import * as React from 'react';
import { HelpMark } from '../../HelpMark';
import { b } from '../constants';
import i18n from '../i18n';
function NoteElement({ note }) {
    if (!note) {
        return null;
    }
    const popoverClassName = b('item-note-tooltip');
    if (typeof note === 'string') {
        return (_jsx(HelpMark, { className: popoverClassName, placement: ['bottom', 'top'], buttonProps: {
                'aria-label': i18n('label_note'),
            }, children: note }));
    }
    if (typeof note === 'object') {
        const { buttonProps } = note, rest = __rest(note, ["buttonProps"]);
        return (_jsx(HelpMark, Object.assign({ className: popoverClassName, placement: ['bottom', 'top'], buttonProps: Object.assign({ 'aria-label': i18n('label_note') }, buttonProps) }, rest)));
    }
    return null;
}
export function TermContent({ note, name, direction }) {
    const noteElement = note ? (_jsxs(React.Fragment, { children: ["\u00A0", _jsx(NoteElement, { note: note })] })) : null;
    return (_jsxs(React.Fragment, { children: [_jsxs("div", { className: b('term-wrapper'), children: [name, noteElement] }), direction === 'horizontal' && _jsx("div", { className: b('dots') })] }));
}
