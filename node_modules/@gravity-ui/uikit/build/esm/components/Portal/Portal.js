'use client';
import { jsx as _jsx } from "react/jsx-runtime";
import * as React from 'react';
import ReactDOM from 'react-dom';
import { usePortalContainer } from '../../hooks';
import { ThemeProvider } from '../theme';
import { useThemeContext } from '../theme/useThemeContext';
import { block } from '../utils/cn';
import './Portal.css';
const b = block('portal');
export function Portal({ container, children, disablePortal }) {
    const defaultContainer = usePortalContainer();
    const { scoped } = useThemeContext();
    const containerNode = container !== null && container !== void 0 ? container : defaultContainer;
    if (disablePortal) {
        return _jsx(React.Fragment, { children: children });
    }
    return containerNode
        ? ReactDOM.createPortal(scoped ? (_jsx(ThemeProvider, { rootClassName: b('theme-wrapper'), scoped: true, children: children })) : (children), containerNode)
        : null;
}
