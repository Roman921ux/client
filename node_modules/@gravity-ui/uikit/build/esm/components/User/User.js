import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import * as React from 'react';
import { Avatar } from '../Avatar';
import { block } from '../utils/cn';
import { COMPACT_SIZES, DEFAULT_SIZE, UserQa } from './constants';
import './User.css';
const b = block('user');
export const User = React.forwardRef(({ avatar, name, description, size = DEFAULT_SIZE, 'aria-label': ariaLabel, 'aria-labelledby': ariaLabelledby, className, style, qa, }, ref) => {
    const showDescription = Boolean(description && !COMPACT_SIZES.has(size));
    const nameTitle = typeof name === 'string' ? name : undefined;
    const descriptionTitle = typeof description === 'string' ? description : undefined;
    return (_jsxs("div", { className: b({ size }, className), "aria-label": ariaLabel, "aria-labelledby": ariaLabelledby, style: style, "data-qa": qa, ref: ref, children: [avatar ? (_jsx("div", { className: b('avatar'), children: React.isValidElement(avatar) ? (avatar) : (_jsx(Avatar, Object.assign({}, avatar, { size: size, title: avatar.title || nameTitle }))) })) : null, name || showDescription ? (_jsxs("div", { className: b('info'), children: [name ? (_jsx("span", { className: b('name'), title: nameTitle, "data-qa": UserQa.NAME, children: name })) : null, showDescription ? (_jsx("span", { className: b('description'), title: descriptionTitle, "data-qa": UserQa.DESCRIPTION, children: description })) : null] })) : null] }));
});
User.displayName = 'User';
