import { __rest } from "tslib";
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { ChevronDown, ChevronUp } from '@gravity-ui/icons';
import { Button } from '../../../Button';
import { Icon } from '../../../Icon';
import { Flex } from '../../../layout';
import { block } from '../../../utils/cn';
import i18n from '../i18n';
import { CONTROL_BUTTONS_QA, DECREMENT_BUTTON_QA, INCREMENT_BUTTON_QA } from '../utils';
import './NumericArrows.css';
const b = block('numeric-arrows');
export function NumericArrows(_a) {
    var { className, size, disabled, onUpClick, onDownClick } = _a, restProps = __rest(_a, ["className", "size", "disabled", "onUpClick", "onDownClick"]);
    const commonBtnProps = {
        size: 's',
        pin: 'brick-brick',
        view: 'flat-secondary',
        disabled,
        tabIndex: -1,
        width: 'max',
        extraProps: {
            'aria-hidden': 'true',
        },
    };
    return (_jsxs(Flex, Object.assign({ direction: "column", className: b({ size }, className), qa: CONTROL_BUTTONS_QA }, restProps, { children: [_jsx(Button, Object.assign({ className: b('arrow-btn'), qa: INCREMENT_BUTTON_QA }, commonBtnProps, { onClick: onUpClick, extraProps: { 'aria-label': i18n('label_increment') }, children: _jsx(Icon, { data: ChevronUp, size: 12 }) })), _jsx("span", { className: b('separator') }), _jsx(Button, Object.assign({ className: b('arrow-btn'), qa: DECREMENT_BUTTON_QA }, commonBtnProps, { onClick: onDownClick, extraProps: { 'aria-label': i18n('label_decrement') }, children: _jsx(Icon, { data: ChevronDown, size: 12 }) }))] })));
}
